/*Longest Palindromic Substring --> Leetcode*/

class Solution {
    public String longestPalindrome(String s) {
        
        if(s == null || s.isEmpty() || s.length() <2){
            return s;
        }
        //odd length
        int left , right , maxSt = 1, maxEnd = 1, maxLen = 1; 
        for(int i = 1; i < s.length()-1; i++){
            left = i; right = i;
            while(left >=0 && right <s.length()){
                if(s.charAt(left) == s.charAt(right)){
                    if((right - left +1)> maxLen){
                        maxLen = right - left +1;
                        maxSt = left;
                        maxEnd = right;
                    }
                    left--;
                    right++;            
                }else{
                    break;
                }
            }
        }
        
        //even length
        for(int i = 0; i < s.length()-1; i++){
            left = i; right = i+1;
            while(left >=0 && right <s.length()){
                if(s.charAt(left)== s.charAt(right)){
                    if((right - left +1)> maxLen){
                        maxLen = right - left +1;
                        maxSt = left;
                        maxEnd = right;
                    }     
                    left--;
                    right++;  
                }else{
                    break;
                }
            }        
        }
        
        String op = "";
        for(int i = maxSt; i <= maxEnd; i++){
            
            op += s.charAt(i);
        }
        return op;
    }
}
