class Solution {
    public List<List<Integer>> subsets(int[] nums) {
        List<Integer> intList = new ArrayList<>();
        for(int i = 0; i < nums.length; i++){
            intList.add(nums[i]);
        }
        return subSetRecursive(intList);
    }
    
    public List<List<Integer>> subSetRecursive(List<Integer> nums){
        if(nums.size() == 0){
            List<Integer> intList = new ArrayList<>();
            List<List<Integer>> finalIntsList = new ArrayList<>();
            finalIntsList.add(intList);
            return finalIntsList;
        }else{
            List<Integer> newNumsList = new ArrayList<>();
            int numHere = nums.get(0);
            for(int i = 1; i< nums.size(); i++){
                newNumsList.add(nums.get(i));
            }
            List<List<Integer>> recvdIntsList = subSetRecursive(newNumsList);
            List<List<Integer>> finalIntsList = new ArrayList<>();
            for(int i =0; i< recvdIntsList.size(); i++){
                List<Integer> currNumsList = recvdIntsList.get(i);
                currNumsList.add(numHere);
                recvdIntsList.add(currNumsList);
            }
            return recvdIntsList;
        }
    }
    
    public static void main(String[] args){
        int[] nums = new int[]{1,2,3};
        Solution sol = new Solution();
        List<List<Integer>> result = sol.subsets(nums);
        System.out.println(result);
    }
}
